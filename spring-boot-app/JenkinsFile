pipeline {
  agent any
  stages {
    stage('Checkout') {
      steps {
        script {
          docker.image('abhishekf5/maven-abhishek-docker-agent:v1').inside('--user root -v /var/run/docker.sock:/var/run/docker.sock') {
            stage('Clone repository') {
              sh 'echo passed'
              git branch: 'main', url: 'https://github.com/Thesdda/Ci-cd-with-jenkins-and-argocd.git'
            }
            stage('Build and Test') {
              sh 'ls -ltr'
              sh 'cd spring-boot-app && mvn clean package'
            }
            stage('Static Code Analysis') {
              withEnv(["SONAR_URL=http://52.15.162.105:9000"]) {
                withCredentials([string(credentialsId: 'sonar', variable: 'SONAR_AUTH_TOKEN')]) {
                  sh 'cd spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
                }
              }
            }
            stage('Build and Push Docker Image') {
              withEnv(["DOCKER_IMAGE=thesdda/jenkins-cicd:${env.BUILD_NUMBER}"]) {
                withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                  sh 'cd spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
                  sh 'echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USERNAME} --password-stdin'
                  sh 'docker push ${DOCKER_IMAGE}'
                }
              }
            }
            stage('Update Deployment File') {
              withEnv(["GIT_REPO_NAME=Ci-cd-with-jenkins-and-argocd", "GIT_USER_NAME=Thesdda"]) {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                  sh '''
                    #!/bin/bash
                    git config user.email "ifidon19@gmail.com"
                    git config user.name "Thesdda"
                    sed -i "s/replaceImageTag/${env.BUILD_NUMBER}/g" spring-boot-app-manifests/deployment.yml
                    git add spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${env.BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                  '''
                }
              }
            }
          }
        }
      }
    }
  }
}
